// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/PC.hdl

/**
 * A 16-bit counter with load and reset control bits.
 * if      (reset[t] == 1) out[t+1] = 0
 * else if (load[t] == 1)  out[t+1] = in[t]
 * else if (inc[t] == 1)   out[t+1] = out[t] + 1  (integer addition)
 * else                    out[t+1] = out[t]
 */

CHIP PC {
    IN in[16],load,inc,reset;
    OUT out[16];

    PARTS:
    // Put your code here:
    Not(in=reset, out=notreset);
    And(a=load, b=notreset, out=loadsig);

    Not(in=load, out=notload);
    And(a=inc, b=notreset, out=temp1);
    And(a=temp1, b=notload, out=incsig);

    Not(in=inc, out=notinc);
    And(a=notinc, b=notreset, out=temp2);
    And(a=temp2, b=notload, out=maintainsig);

    Inc16(in=feedbacksig, out=feedbacksig1);

    Mux16(a=feedbacksig, b=false, sel=reset, out=resetout);
    Mux16(a=resetout, b=in, sel=loadsig, out=loadout);
    Mux16(a=loadout, b=feedbacksig1, sel=incsig, out=incout);
    Mux16(a=incout, b=feedbacksig, sel=maintainsig, out=result);

    Register(in=result, load=true, out=out, out=feedbacksig);
}
